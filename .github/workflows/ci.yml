name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Install deps
        run: go mod download

      - name: Run go vet
        run: go vet ./...

      - name: Run gofmt check
        run: |
          test -z "$(gofmt -l .)" || (echo "Run 'gofmt -w .'" && exit 1)

      - name: Run tests
        run: go test ./... -race -v

  docker-smoke:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (local)
        uses: docker/build-push-action@v5
        with:
          push: false
          tags: task-manager-api:ci
          file: ./Dockerfile
          platforms: linux/amd64
          load: true

      - name: Run container
        run: |
          docker run -d --name task-api-ci -p 8080:8080 -e PORT=8080 task-manager-api:ci
          sleep 2

      - name: Install jq
        run: |
          sudo apt-get update && sudo apt-get install -y jq

      - name: Smoke: healthz
        run: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/healthz || true)
          echo "healthz: $STATUS"
          if [ "$STATUS" != "200" ]; then
            docker logs task-api-ci || true
            exit 1
          fi

      - name: Smoke: create task and idempotency
        run: |
          CREATE_OUT=$(curl -s -X POST localhost:8080/tasks \
            -H 'Content-Type: application/json' \
            -H 'Idempotency-Key: ci-key-1' \
            -d '{"type":"echo","payload":{"msg":"ci-smoke"}}')
          echo "$CREATE_OUT"
          ID1=$(echo "$CREATE_OUT" | jq -r .id)
          CREATE_OUT2=$(curl -s -X POST localhost:8080/tasks \
            -H 'Content-Type: application/json' \
            -H 'Idempotency-Key: ci-key-1' \
            -d '{"type":"echo","payload":{"msg":"ci-smoke"}}')
          ID2=$(echo "$CREATE_OUT2" | jq -r .id)
          if [ "$ID1" != "$ID2" ]; then
            echo "ids differ: $ID1 vs $ID2"
            docker logs task-api-ci || true
            exit 1
          fi

      - name: Smoke: fetch task
        run: |
          TASK_JSON=$(curl -s localhost:8080/tasks/$ID1 || true)
          echo "$TASK_JSON" | jq . || true

      - name: Tear down
        run: |
          docker stop task-api-ci || true
          docker rm task-api-ci || true
